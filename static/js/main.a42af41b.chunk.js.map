{"version":3,"sources":["utils/request.ts","containers/Login/index.tsx","api/login.ts","components/Header/index.tsx","api/holding.ts","components/MarginChart/index.tsx","components/DataChart/index.tsx","utils/formatPercentage.ts","containers/Holding/index.tsx","api/insights.ts","containers/Insights/index.tsx","api/portfolio.ts","api/orders.ts","containers/AddAsset/index.tsx","api/assets.ts","containers/Wallet/index.tsx","utils/formatCurrency.ts","containers/Main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["request","ky","create","prefixUrl","headers","accept","useStyles","makeStyles","formControl","width","paddingTop","wrapper","height","backgroundColor","card","position","top","left","transform","cardContent","display","flexDirection","alignItems","padding","buttonMargin","marginTop","title","textTransform","Login","history","useHistory","useState","email","setEmail","password","setPassword","classes","login","a","post","json","id_usuario","token","localStorage","setItem","push","toast","error","className","Card","CardContent","Typography","color","variant","FormControl","FormLabel","Input","value","onChange","e","target","type","Button","size","onClick","header","paddingLeft","fontFamily","Header","holding","userId","expand","searchParams","URLSearchParams","append","get","MarginChart","data","chart","map","d","name","ano","margin","margem_liquida","toFixed","toPercent","decimal","ResponsiveContainer","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","tickFormatter","Tooltip","formatter","Legend","Bar","fill","DataChart","div_ebitda","divida_liquida","ebitda","lucro_liquido","margem_ebitda","receita_liquida","LineChart","right","bottom","Line","stroke","formatPercentage","marginBottom","modalContainer","border","modal","justifyContent","graphics","StyledTableCell","withStyles","head","body","borderBottom","fontSize","TableCell","Row","row","holdings","React","open","setOpen","quarters","filter","trimestre","Fragment","TableRow","IconButton","aria-label","KeyboardArrowUp","KeyboardArrowDown","style","paddingBottom","colSpan","Collapse","in","timeout","unmountOnExit","Table","TableHead","TableBody","codigo","Holding","rows","setRows","setHoldings","fetchHoldings","useCallback","apiHolding","consolidated","useEffect","Box","m","TableContainer","component","Paper","summary","TabPanel","children","index","props","role","hidden","id","aria-labelledby","bold","fontWeight","cards","gridTemplateColumns","boxShadow","Insights","setValue","insights","setInsights","fetchInsights","apiInsightsSummary","filteredInsights","insight","ativo_maior_divida","nome","ativo_maior_lucro","ativo_maior_receita","ativo_maior_ebitda","AppBar","Tabs","_","newValue","indicatorColor","textColor","scrollButtons","Tab","label","align","maxValue","divida_delta","text","lucro_maior_delta","ebitda_maior_delta","receita_maior_delta","all","save","order","minWidth","formLabelPadding","AddAsset","onSave","assets","setAssets","asset","setAsset","assetType","setAssetType","Date","date","setDate","quantity","setQuantity","totalValue","setTotalValue","fetchAssets","length","RadioGroup","FormControlLabel","control","Radio","Select","MenuItem","utils","DateFnsUtils","DatePicker","disableToolbar","format","parseInt","startAdornment","InputAdornment","id_ativo","quantidade","tipo","valor","formatRow","ativo","logo","Wallet","isOpen","setIsOpen","fetchPortfolio","apiAllPortfolio","portfolio","formattedRows","p","handleSave","apiSaveOrder","success","scope","Avatar","src","alt","toString","replace","Modal","onClose","Main","setUserId","setToken","getItem","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a42af41b.chunk.js","sourcesContent":["import ky from \"ky\";\n\nexport const request = ky.create({\n  prefixUrl: \"https://fundament-stock-api.herokuapp.com\",\n  headers: {\n    accept: \"application/json\",\n  },\n});\n","import React, { useState } from \"react\";\nimport {\n  Card,\n  Input,\n  FormLabel,\n  makeStyles,\n  CardContent,\n  FormControl,\n  Button,\n  Typography,\n} from \"@material-ui/core\";\n\nimport { login as apiLogin } from \"../../api/login\";\nimport { toast } from \"react-toastify\";\nimport { useHistory } from \"react-router-dom\";\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    width: \"50%\",\n    paddingTop: 24,\n  },\n  wrapper: {\n    height: \"100vh\",\n    width: \"100vw\",\n    backgroundColor: \"rgba(1, 93, 164, 0.5)\",\n  },\n  card: {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    width: \"40%\",\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    padding: \"20px\",\n  },\n  buttonMargin: {\n    marginTop: 24,\n    width: \"25%\",\n  },\n  title: {\n    textTransform: \"uppercase\",\n  },\n}));\n\nconst Login = () => {\n  const history = useHistory();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  const classes = useStyles();\n\n  const login = async () => {\n    try {\n      const { id_usuario, token } = await apiLogin({ email, password });\n      localStorage.setItem(\"id_usuario\", `${id_usuario}`);\n      localStorage.setItem(\"token\", `${token}`);\n\n      history.push(\"/\");\n    } catch (e) {\n      toast.error(\"Ocorreu um erro ao fazer login.\");\n    }\n  };\n\n  return (\n    <div className={classes.wrapper}>\n      <Card className={classes.card}>\n        <CardContent className={classes.cardContent}>\n          <Typography color='primary' className={classes.title} variant='h6'>\n            You as a holding\n          </Typography>\n          <FormControl className={classes.formControl}>\n            <FormLabel>Usuário</FormLabel>\n            <Input value={email} onChange={(e) => setEmail(e.target.value)} />\n          </FormControl>\n          <FormControl className={classes.formControl}>\n            <FormLabel>Senha</FormLabel>\n            <Input\n              value={password}\n              type='password'\n              onChange={(e) => setPassword(e.target.value)}\n            />\n          </FormControl>\n          <Button\n            size='medium'\n            className={classes.buttonMargin}\n            variant='contained'\n            color='primary'\n            onClick={login}\n          >\n            Login\n          </Button>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default Login;\n","import { request } from \"../utils/request\";\n\ntype Login = {\n  email: string;\n  password: string;\n};\n\ntype LoginResponse = {\n  id_usuario: number;\n  token: string;\n};\n\nexport const login = (login: Login) =>\n  request.post(\"login\", { json: login }).json<LoginResponse>();\n","import { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  header: {\n    height: \"100px\",\n    width: \"100vw\",\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: \"30px\",\n    backgroundColor: \"rgba(1, 93, 164, 0.5)\",\n  },\n  title: {\n    fontFamily: \"Exo\",\n    color: \"#1C1D1E\",\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.header}>\n      <Typography className={classes.title} variant='h3'>\n        You As A Holding\n      </Typography>\n    </div>\n  );\n};\n\nexport default Header;\n","import { request } from \"../utils/request\";\n\ntype HoldingProps = {\n  userId: number;\n  expand?: boolean;\n};\n\ntype Asset = {\n  id: number;\n  codigo: string;\n  nome: string;\n};\n\ntype AssetData = {\n  ativo: Asset;\n  id_trimestre: number;\n  receita_liquida: number;\n  ebitda: number;\n  margem_ebitda: number;\n  lucro_liquido: number;\n  margem_liquida: number;\n  divida_liquida: number;\n  div_ebitda: number;\n};\n\nexport interface Holding {\n  trimestre: Quarter;\n  receita_liquida: number;\n  ebitda: number;\n  margem_ebitda: number;\n  lucro_liquido: number;\n  margem_liquida: number;\n  divida_liquida: number;\n  div_ebitda: number;\n  ativos: AssetData[];\n}\n\nexport interface Consolidated {\n  ano: number;\n  receita_liquida: number;\n  ebitda: number;\n  margem_ebitda: number;\n  lucro_liquido: number;\n  margem_liquida: number;\n  divida_liquida: number;\n  div_ebitda: number;\n}\n\nexport interface Holdings {\n  holdings: Holding[];\n  consolidated: Consolidated[];\n}\n\ntype Quarter = {\n  id: number;\n  ano: number;\n  trimestre: number;\n  codigo: string;\n};\n\nexport const holding = ({ userId, expand }: HoldingProps) => {\n  const searchParams = new URLSearchParams();\n  searchParams.append(\"usuario\", `${userId}`);\n  if (expand) {\n    searchParams.append(\"expandir\", `${expand}`);\n  }\n\n  return request.get(`holdings`, { searchParams }).json<Holdings>();\n};\n","import {\n  Bar,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  BarChart,\n  CartesianGrid,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Consolidated } from \"../../api/holding\";\n\nexport const MarginChart = ({ data }: { data: Consolidated[] }) => {\n  const chart = data?.map((d) => ({\n    name: d.ano,\n    margin: (d.margem_liquida * 100).toFixed(0),\n  }));\n\n  const toPercent = (decimal: string) => `${decimal}%`;\n\n  return (\n    <ResponsiveContainer width='50%' height={250}>\n      <BarChart data={chart}>\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='name' />\n        <YAxis tickFormatter={toPercent} />\n        <Tooltip formatter={toPercent} />\n        <Legend />\n        <Bar name='Margem' dataKey='margin' fill='#0E3A8A' />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import {\n  Line,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  LineChart,\n  CartesianGrid,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Consolidated } from \"../../api/holding\";\n\nexport const DataChart = ({ data }: { data: Consolidated[] }) => {\n  const chart = data?.map((d) => ({\n    name: d.ano,\n    div_ebitda: d.div_ebitda,\n    divida_liquida: d.divida_liquida,\n    ebitda: d.ebitda,\n    lucro_liquido: d.lucro_liquido,\n    margem_ebitda: (d.margem_ebitda * 100).toFixed(0),\n    receita_liquida: d.receita_liquida,\n  }));\n\n  return (\n    <ResponsiveContainer width='50%' height={250}>\n      <LineChart\n        data={chart}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='name' />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line\n          name='Dívida líquida/EBITDA'\n          type='monotone'\n          dataKey='div_ebitda'\n          stroke='#1B7473'\n        />\n        <Line\n          name='Dívida líquida'\n          type='monotone'\n          dataKey='divida_liquida'\n          stroke='#810E8A'\n        />\n        <Line\n          name='EBITDA'\n          type='monotone'\n          dataKey='ebitda'\n          stroke='#FFC300 '\n        />\n        <Line\n          name='Lucro líquido'\n          type='monotone'\n          dataKey='lucro_liquido'\n          stroke='#FF5733'\n        />\n        <Line\n          name='Margem líquida/EBITDA'\n          type='monotone'\n          dataKey='margem_ebitda'\n          stroke='#27741B'\n        />\n        <Line\n          name='Receita líquida'\n          type='monotone'\n          dataKey='receita_liquida'\n          stroke='#1B3674'\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n","export const formatPercentage = (value: number) =>\n  `${(value * 100).toFixed(0)}%`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  Paper,\n  Collapse,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableCell,\n  withStyles,\n  makeStyles,\n  Typography,\n  IconButton,\n  TableContainer,\n} from \"@material-ui/core\";\nimport { KeyboardArrowUp, KeyboardArrowDown } from \"@material-ui/icons\";\n\nimport {\n  Consolidated,\n  holding as apiHolding,\n  Holding as HoldingProps,\n} from \"../../api/holding\";\nimport { MarginChart } from \"../../components/MarginChart\";\nimport { DataChart } from \"../../components/DataChart\";\nimport { formatPercentage } from \"../../utils/formatPercentage\";\nimport { toast } from \"react-toastify\";\n\nconst useStyles = makeStyles(() => ({\n  margin: {\n    marginBottom: 24,\n  },\n  modalContainer: {\n    position: \"absolute\",\n    width: 800,\n    backgroundColor: \"white\",\n    border: \"2px solid #000\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  graphics: {\n    display: \"flex\",\n  },\n}));\n\nconst StyledTableCell = withStyles(() => ({\n  head: {},\n  body: {\n    borderBottom: \"none\",\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst Row = ({ row, holdings }: { row: any; holdings: any }) => {\n  const [open, setOpen] = React.useState(false);\n\n  const quarters = holdings.filter(\n    (holding: any) => holding.trimestre.ano === row.ano\n  );\n\n  return (\n    <React.Fragment>\n      <TableRow>\n        <TableCell>\n          <IconButton\n            aria-label='expand row'\n            size='small'\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell>{row.ano}</TableCell>\n        <TableCell>{row.receita_liquida}</TableCell>\n        <TableCell>{row.ebitda}</TableCell>\n        <TableCell>{formatPercentage(row.margem_ebitda)}</TableCell>\n        <TableCell>{row.lucro_liquido}</TableCell>\n        <TableCell>{formatPercentage(row.margem_liquida)}</TableCell>\n        <TableCell>{row.divida_liquida}</TableCell>\n        <TableCell>{row.div_ebitda}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\n          <Collapse in={open} timeout='auto' unmountOnExit>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Trimestre</TableCell>\n                  <TableCell>Receita líquida</TableCell>\n                  <TableCell>EBITDA</TableCell>\n                  <TableCell>Margem EBITDA</TableCell>\n                  <TableCell>Lucro líquido</TableCell>\n                  <TableCell>Margem líquida</TableCell>\n                  <TableCell>Dívida líquida</TableCell>\n                  <TableCell>Dívida líquida/EBITDA</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {quarters.map((row: HoldingProps) => (\n                  <TableRow key={row.trimestre.codigo}>\n                    <>\n                      <StyledTableCell>\n                        {row.trimestre.ano}/{row.trimestre.trimestre}\n                      </StyledTableCell>\n                      <StyledTableCell>{row.receita_liquida}</StyledTableCell>\n                      <StyledTableCell>{row.ebitda}</StyledTableCell>\n                      <StyledTableCell>\n                        {formatPercentage(row.margem_ebitda)}\n                      </StyledTableCell>\n                      <StyledTableCell>{row.lucro_liquido}</StyledTableCell>\n                      <StyledTableCell>\n                        {formatPercentage(row.margem_liquida)}\n                      </StyledTableCell>\n                      <StyledTableCell>{row.divida_liquida}</StyledTableCell>\n                      <StyledTableCell>{row.div_ebitda}</StyledTableCell>\n                    </>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nconst Holding = ({ userId }: { userId: number }) => {\n  const [rows, setRows] = useState([] as Consolidated[]);\n  const [holdings, setHoldings] = useState([] as HoldingProps[]);\n\n  const classes = useStyles();\n\n  const fetchHoldings = useCallback(async () => {\n    try {\n      const holding = await apiHolding({ userId });\n\n      setRows(holding.consolidated);\n      setHoldings(holding.holdings);\n    } catch (e) {\n      toast.error(\"Ocorreu um erro ao buscar o resumo de dados.\");\n    }\n  }, [userId]);\n\n  useEffect(() => {\n    fetchHoldings();\n  }, [fetchHoldings]);\n\n  return (\n    <Box m={5}>\n      <Typography className={classes.margin} variant='h5'>\n        Resumo\n      </Typography>\n      <TableContainer component={Paper} className={classes.margin}>\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Ano</TableCell>\n              <TableCell>Receita líquida</TableCell>\n              <TableCell>Margem EBITDA</TableCell>\n              <TableCell>Lucro líquido</TableCell>\n              <TableCell>Margem líquida</TableCell>\n              <TableCell>Dívida líquida</TableCell>\n              <TableCell>Dívida líquida/EBITDA</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows?.map((row) => (\n              <Row row={row} key={row.ano} holdings={holdings} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div className={classes.graphics}>\n        <MarginChart data={rows} />\n        <DataChart data={rows} />\n      </div>\n    </Box>\n  );\n};\n\nexport default Holding;\n","import { request } from \"../utils/request\";\n\ntype Quarter = {\n  id: number;\n  ano: number;\n  trimestre: number;\n  codigo: string;\n};\n\ntype Asset = {\n  id: number;\n  codigo: string;\n  nome: string;\n};\n\nexport type Insight = {\n  trimestre: Quarter;\n  ativo_maior_receita: Asset;\n  receita_maior_delta: number;\n  ativo_maior_ebitda: Asset;\n  ebitda_maior_delta: number;\n  ativo_maior_lucro: Asset;\n  lucro_maior_delta: number;\n  ativo_maior_divida: Asset;\n  divida_delta: number;\n};\n\nexport type Insights = {\n  insights: Insight[];\n};\n\nexport const summary = (userId: number) =>\n  request.get(`insights-summary?usuario=${userId}`).json<Insights>();\n","import React, { ReactNode, useCallback, useEffect, useState } from \"react\";\n\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box, Card, CardContent } from \"@material-ui/core\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nimport { Insight, summary as apiInsightsSummary } from \"../../api/insights\";\nimport { formatPercentage } from \"../../utils/formatPercentage\";\nimport { toast } from \"react-toastify\";\n\ntype TabPanelProps = {\n  children: ReactNode;\n  value: number;\n  index: number;\n};\n\nconst TabPanel = ({ children, value, index, ...props }: TabPanelProps) => {\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...props}\n    >\n      {value === index && <Typography>{children}</Typography>}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles(() => ({\n  bold: {\n    fontWeight: 700,\n  },\n  cards: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    boxShadow:\n      \"0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)\",\n  },\n  card: {\n    margin: \"10px 5px\",\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  margin: {\n    marginBottom: 24,\n  },\n}));\n\nconst Insights = ({ userId }: { userId: number }) => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [insights, setInsights] = useState<Insight[]>([]);\n\n  const handleChange = (_: any, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const fetchInsights = useCallback(async () => {\n    try {\n      const { insights } = await apiInsightsSummary(userId);\n      const filteredInsights = insights.filter(\n        (insight) =>\n          !!insight.ativo_maior_divida.nome ||\n          !!insight.ativo_maior_lucro.nome ||\n          !!insight.ativo_maior_receita.nome ||\n          !!insight.ativo_maior_ebitda.nome\n      );\n      setInsights(filteredInsights);\n    } catch (e) {\n      toast.error(\"Ocorreu um erro ao buscar os insights.\");\n    }\n  }, [userId]);\n\n  useEffect(() => {\n    fetchInsights();\n  }, [fetchInsights]);\n\n  return (\n    <Box m={5}>\n      <Typography className={classes.margin} variant='h5'>\n        Insights\n      </Typography>\n      <AppBar position='static' color='default'>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor='primary'\n          textColor='primary'\n          variant='scrollable'\n          scrollButtons='auto'\n          aria-label='scrollable auto tabs example'\n        >\n          {insights.map((insight) => (\n            <Tab\n              label={`${insight.trimestre.ano}/${insight.trimestre.trimestre}`}\n            />\n          ))}\n        </Tabs>\n      </AppBar>\n\n      {insights.map((insight, index) => (\n        <TabPanel value={value} index={index}>\n          <div className={classes.cards}>\n            {!!insight.ativo_maior_divida.nome && (\n              <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                  <Typography\n                    variant='subtitle1'\n                    align='center'\n                    className={classes.bold}\n                  >\n                    {\" \"}\n                    Ativo com maior aumento de dívida{\" \"}\n                  </Typography>\n                  {insight.ativo_maior_divida.nome}{\" \"}\n                  <div style={{ width: 100, height: 100 }}>\n                    <CircularProgressbar\n                      maxValue={1}\n                      value={insight.divida_delta}\n                      text={formatPercentage(insight.divida_delta)}\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {!!insight.ativo_maior_lucro.nome && (\n              <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                  <Typography\n                    variant='subtitle1'\n                    align='center'\n                    className={classes.bold}\n                  >\n                    {\" \"}\n                    Ativo com maior aumento de lucro{\" \"}\n                  </Typography>\n                  {insight.ativo_maior_lucro.nome}{\" \"}\n                  <div style={{ width: 100, height: 100 }}>\n                    <CircularProgressbar\n                      maxValue={1}\n                      value={insight.lucro_maior_delta}\n                      text={formatPercentage(insight.lucro_maior_delta)}\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {!!insight.ativo_maior_ebitda.nome && (\n              <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                  <Typography\n                    variant='subtitle1'\n                    align='center'\n                    className={classes.bold}\n                  >\n                    {\" \"}\n                    Ativo com maior aumento de EBITDA{\" \"}\n                  </Typography>\n                  {insight.ativo_maior_ebitda.nome}{\" \"}\n                  <div style={{ width: 100, height: 100 }}>\n                    <CircularProgressbar\n                      maxValue={1}\n                      value={insight.ebitda_maior_delta}\n                      text={formatPercentage(insight.ebitda_maior_delta)}\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {!!insight.ativo_maior_receita.nome && (\n              <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                  <Typography\n                    variant='subtitle1'\n                    align='center'\n                    className={classes.bold}\n                  >\n                    {\" \"}\n                    Ativo com maior aumento de receita{\" \"}\n                  </Typography>\n                  {insight.ativo_maior_receita.nome}{\" \"}\n                  <div style={{ width: 100, height: 100 }}>\n                    <CircularProgressbar\n                      value={insight.receita_maior_delta * 100}\n                      text={formatPercentage(insight.receita_maior_delta)}\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        </TabPanel>\n      ))}\n    </Box>\n  );\n};\n\nexport default Insights;\n","import { request } from \"../utils/request\";\nimport { Asset } from \"./assets\";\n\nexport type Portfolio = {\n  ativo: Asset;\n  id_usuario: number;\n  quantidade: number;\n  valor: number;\n};\n\nexport const all = (userId: number) =>\n  request.get(`portfolio?usuario=${userId}`).json<Portfolio[]>();\n","import { request } from \"../utils/request\";\n\nexport type Order = {\n  data: string;\n  id: number;\n  id_ativo: number;\n  id_usuario: number;\n  quantidade: number;\n  tipo: string;\n  valor: number;\n};\n\nexport type OrderData = {\n  data: string;\n  id_ativo: number;\n  id_usuario: number;\n  quantidade: number;\n  tipo: string;\n  valor: number;\n};\n\nexport const all = () => request.get(\"orders\").json<Order[]>();\nexport const save = (order: OrderData) =>\n  request.post(\"orders\", { json: order });\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Radio,\n  Input,\n  Select,\n  Button,\n  MenuItem,\n  FormLabel,\n  Typography,\n  RadioGroup,\n  FormControl,\n  InputAdornment,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\n\nimport { Asset, all as apiAllAssets } from \"../../api/assets\";\nimport { OrderData } from \"../../api/orders\";\nimport { toast } from \"react-toastify\";\n\ntype AssetType = \"C\" | \"V\";\n\ntype Props = {\n  onSave: (order: OrderData) => void;\n};\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    minWidth: 120,\n    paddingTop: 24,\n  },\n  formLabelPadding: {\n    paddingBottom: 16,\n  },\n  buttonMargin: {\n    marginTop: 24,\n  },\n}));\n\nconst AddAsset: React.FC<Props> = ({ onSave }) => {\n  const [assets, setAssets] = useState<Asset[]>();\n  const [asset, setAsset] = useState(0);\n  const [assetType, setAssetType] = useState<AssetType>(\"C\");\n  const [date, setDate] = useState(new Date());\n  const [quantity, setQuantity] = useState(0);\n  const [totalValue, setTotalValue] = useState(0);\n\n  const classes = useStyles();\n\n  const fetchAssets = useCallback(async () => {\n    try {\n      const assets = await apiAllAssets();\n      setAssets(assets);\n      if (assets.length > 0) {\n        setAsset(assets[0].id);\n      }\n    } catch (e) {\n      toast.error(\"Ocorreu um erro ao buscar os ativos.\");\n    }\n  }, []);\n\n  const save = () => {\n    onSave({\n      data: `${format(date, \"yyyy-MM-dd\")}T00:00:00Z`,\n      id_ativo: asset,\n      id_usuario: 1,\n      quantidade: quantity,\n      tipo: assetType,\n      valor: totalValue,\n    });\n  };\n\n  const toggleAssetType = () => {\n    setAssetType(assetType === \"C\" ? \"V\" : \"C\");\n  };\n\n  useEffect(() => {\n    fetchAssets();\n  }, [fetchAssets]);\n\n  return (\n    <Box m={4} display='flex' flexDirection='column'>\n      <Typography variant='h6'> Adicione ativo</Typography>\n      <FormControl className={classes.formControl}>\n        <FormLabel>Tipo de ativo</FormLabel>\n        <RadioGroup\n          row\n          aria-label='tipo de ativo'\n          name='assetType'\n          value={assetType}\n          onChange={toggleAssetType}\n        >\n          <FormControlLabel\n            value='C'\n            control={<Radio color='primary' />}\n            label='Compra'\n          />\n          <FormControlLabel\n            value='V'\n            control={<Radio color='primary' />}\n            label='Venda'\n          />\n        </RadioGroup>\n      </FormControl>\n\n      <FormControl className={classes.formControl}>\n        <FormLabel>Ativo</FormLabel>\n        <Select\n          value={asset}\n          onChange={(e) => setAsset(e.target.value as number)}\n        >\n          {assets?.map((asset) => (\n            <MenuItem value={asset.id}>{asset.nome}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <FormControl className={classes.formControl}>\n          <FormLabel className={classes.formLabelPadding}>Data</FormLabel>\n          <DatePicker\n            disableToolbar\n            variant='inline'\n            value={date}\n            format='dd/MM/yyyy'\n            onChange={(date) => setDate(date as Date)}\n          />\n        </FormControl>\n      </MuiPickersUtilsProvider>\n\n      <FormControl className={classes.formControl}>\n        <FormLabel>Quantidade</FormLabel>\n        <Input\n          value={quantity}\n          type='number'\n          onChange={(e) => setQuantity(parseInt(e.target.value))}\n        />\n      </FormControl>\n\n      <FormControl className={classes.formControl}>\n        <FormLabel>Valor total</FormLabel>\n        <Input\n          value={totalValue}\n          type='number'\n          onChange={(e) => setTotalValue(parseInt(e.target.value))}\n          startAdornment={<InputAdornment position='start'>R$</InputAdornment>}\n        />\n      </FormControl>\n      <Button\n        size='medium'\n        className={classes.buttonMargin}\n        variant='contained'\n        color='primary'\n        onClick={save}\n      >\n        Salvar\n      </Button>\n    </Box>\n  );\n};\n\nexport default AddAsset;\n","import { request } from \"../utils/request\";\n\nexport type Asset = {\n  codigo: string;\n  cotacao: number;\n  id: number;\n  logo: string;\n  nome: string;\n};\n\nexport type AssetData = {\n  codigo: string;\n  logo: string;\n  nome: string;\n};\n\nexport const all = () => request.get(\"assets\").json<Asset[]>();\nexport const save = (asset: AssetData) =>\n  request.post(\"assets\", { json: asset });\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Modal,\n  Table,\n  Paper,\n  Avatar,\n  Button,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableCell,\n  makeStyles,\n  Typography,\n  TableContainer,\n} from \"@material-ui/core\";\n\nimport { Portfolio, all as apiAllPortfolio } from \"../../api/portfolio\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { OrderData, save as apiSaveOrder } from \"../../api/orders\";\nimport AddAsset from \"../AddAsset\";\nimport { toast } from \"react-toastify\";\n\ntype Row = {\n  logo: string;\n  codigo: string;\n  quantidade: number;\n  valor: number;\n};\n\nconst formatRow = ({\n  ativo: { codigo, logo },\n  quantidade,\n  valor,\n}: Portfolio): Row => ({\n  logo,\n  quantidade,\n  valor,\n  codigo,\n});\n\nconst useStyles = makeStyles(() => ({\n  margin: {\n    marginBottom: 24,\n  },\n  modalContainer: {\n    position: \"absolute\",\n    width: 800,\n    backgroundColor: \"white\",\n    border: \"2px solid #000\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst Wallet = ({ userId }: { userId: number }) => {\n  const [rows, setRows] = useState([] as Row[]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const classes = useStyles();\n\n  const fetchPortfolio = useCallback(async () => {\n    try {\n      const portfolio = await apiAllPortfolio(userId);\n      const formattedRows = portfolio.map((p) => formatRow(p));\n      setRows(formattedRows);\n    } catch (e) {\n      toast.error(\"Ocorreu um erro ao buscar o portfolio.\");\n    }\n  }, [userId]);\n\n  const handleSave = async (order: OrderData) => {\n    try {\n      await apiSaveOrder(order);\n      setIsOpen(false);\n      fetchPortfolio();\n      toast.success(\"Ativo adicionado com sucesso.\");\n    } catch (e) {\n      toast.error(\"Ocorreu um erro ao salvar o novo ativo.\");\n    }\n  };\n\n  useEffect(() => {\n    fetchPortfolio();\n  }, [fetchPortfolio]);\n\n  return (\n    <Box m={5}>\n      <Typography className={classes.margin} variant='h5'>\n        Sua carteira\n      </Typography>\n      <TableContainer component={Paper} className={classes.margin}>\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell padding='checkbox'>Ativo</TableCell>\n              <TableCell></TableCell>\n              <TableCell>Quantidade</TableCell>\n              <TableCell>Valor</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.codigo}>\n                <TableCell component='th' scope='row'>\n                  <Avatar variant='square' src={row.logo} alt={row.codigo} />\n                </TableCell>\n                <TableCell>{row.codigo}</TableCell>\n                <TableCell>{row.quantidade}</TableCell>\n                <TableCell>{formatCurrency(row.valor)}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Button\n        size='medium'\n        variant='contained'\n        color='primary'\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        Adicionar ativo\n      </Button>\n\n      <Modal\n        open={isOpen}\n        className={classes.modal}\n        onClose={() => setIsOpen(false)}\n      >\n        <body className={classes.modalContainer}>\n          <AddAsset onSave={handleSave} />\n        </body>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default Wallet;\n","export const formatCurrency = (value: number) =>\n  `R$ ${value.toString().replace(\".\", \",\")}`;\n","import { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport Header from \"../../components/Header\";\nimport Holding from \"../Holding\";\nimport Insights from \"../Insights\";\nimport Wallet from \"../Wallet\";\n\nexport const Main = () => {\n  const history = useHistory();\n  const [userId, setUserId] = useState<number>(0);\n  const [token, setToken] = useState<string>();\n\n  useEffect(() => {\n    const token = localStorage.getItem(\"token\") as string;\n    const id_usuario = localStorage.getItem(\"id_usuario\") || \"0\";\n\n    if (!token) {\n      history.push(\"/login\");\n    }\n\n    setToken(token);\n    setUserId(parseInt(id_usuario));\n  }, [history]);\n\n  return (\n    <>\n      {token && (\n        <>\n          <Header />\n          <Wallet userId={userId} />\n          <Holding userId={userId} />\n          <Insights userId={userId} />\n        </>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\nimport Login from \"./containers/Login\";\n\nimport { Main } from \"./containers/Main\";\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route path='/' exact={true} component={Main} />\n        <Route path='/login' component={Login} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App></App>\n    <ToastContainer />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}