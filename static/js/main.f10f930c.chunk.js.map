{"version":3,"sources":["utils/request.ts","containers/AddAsset/index.tsx","api/assets.ts","containers/Wallet/index.tsx","api/portfolio.ts","utils/formatCurrency.ts","api/orders.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["request","ky","create","prefixUrl","headers","accept","useStyles","makeStyles","formControl","minWidth","paddingTop","formLabelPadding","paddingBottom","buttonMargin","marginTop","AddAsset","onSave","useState","assets","setAssets","asset","setAsset","assetType","setAssetType","Date","date","setDate","quantity","setQuantity","totalValue","setTotalValue","classes","fetchAssets","useCallback","a","get","json","length","id","useEffect","Box","m","display","flexDirection","Typography","variant","FormControl","className","FormLabel","RadioGroup","row","aria-label","name","value","onChange","FormControlLabel","control","Radio","color","label","Select","e","target","map","MenuItem","nome","utils","DateFnsUtils","DatePicker","disableToolbar","format","Input","type","parseInt","startAdornment","InputAdornment","position","Button","size","onClick","data","id_ativo","id_usuario","quantidade","tipo","valor","formatRow","ativo","codigo","logo","margin","marginBottom","modalContainer","width","backgroundColor","border","modal","alignItems","justifyContent","Wallet","rows","setRows","isOpen","setIsOpen","fetchPortfolio","userId","portfolio","formattedRows","p","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","padding","TableBody","scope","Avatar","src","alt","toString","replace","Modal","open","onClose","order","post","apiSaveOrder","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f10f930c.chunk.js","sourcesContent":["import ky from \"ky\";\n\nexport const request = ky.create({\n  prefixUrl: \"https://fundament-stock-api.herokuapp.com\",\n  headers: {\n    accept: \"application/json\",\n  },\n});\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Radio,\n  Input,\n  Select,\n  Button,\n  MenuItem,\n  FormLabel,\n  Typography,\n  RadioGroup,\n  FormControl,\n  InputAdornment,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\n\nimport { Asset, all as apiAllAssets } from \"../../api/assets\";\nimport { OrderData } from \"../../api/orders\";\n\ntype AssetType = \"C\" | \"V\";\n\ntype Props = {\n  onSave: (order: OrderData) => void;\n};\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    minWidth: 120,\n    paddingTop: 24,\n  },\n  formLabelPadding: {\n    paddingBottom: 16,\n  },\n  buttonMargin: {\n    marginTop: 24,\n  },\n}));\n\nconst AddAsset: React.FC<Props> = ({ onSave }) => {\n  const [assets, setAssets] = useState<Asset[]>();\n  const [asset, setAsset] = useState(0);\n  const [assetType, setAssetType] = useState<AssetType>(\"C\");\n  const [date, setDate] = useState(new Date());\n  const [quantity, setQuantity] = useState(0);\n  const [totalValue, setTotalValue] = useState(0);\n\n  const classes = useStyles();\n\n  const fetchAssets = useCallback(async () => {\n    const assets = await apiAllAssets();\n    setAssets(assets);\n    if (assets.length > 0) {\n      setAsset(assets[0].id);\n    }\n  }, []);\n\n  const save = () => {\n    onSave({\n      data: `${format(date, \"yyyy-MM-dd\")}T00:00:00Z`,\n      id_ativo: asset,\n      id_usuario: 1,\n      quantidade: quantity,\n      tipo: assetType,\n      valor: totalValue,\n    });\n  };\n\n  const toggleAssetType = () => {\n    setAssetType(assetType === \"C\" ? \"V\" : \"C\");\n  };\n\n  useEffect(() => {\n    fetchAssets();\n  }, [fetchAssets]);\n\n  return (\n    <Box m={4} display=\"flex\" flexDirection=\"column\">\n      <Typography variant=\"h6\"> Adicione ativo</Typography>\n      <FormControl className={classes.formControl}>\n        <FormLabel>Tipo de ativo</FormLabel>\n        <RadioGroup\n          row\n          aria-label=\"tipo de ativo\"\n          name=\"assetType\"\n          value={assetType}\n          onChange={toggleAssetType}\n        >\n          <FormControlLabel\n            value=\"C\"\n            control={<Radio color=\"primary\" />}\n            label=\"Compra\"\n          />\n          <FormControlLabel\n            value=\"V\"\n            control={<Radio color=\"primary\" />}\n            label=\"Venda\"\n          />\n        </RadioGroup>\n      </FormControl>\n\n      <FormControl className={classes.formControl}>\n        <FormLabel>Ativo</FormLabel>\n        <Select\n          value={asset}\n          onChange={(e) => setAsset(e.target.value as number)}\n        >\n          {assets?.map((asset) => (\n            <MenuItem value={asset.id}>{asset.nome}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <FormControl className={classes.formControl}>\n          <FormLabel className={classes.formLabelPadding}>Data</FormLabel>\n          <DatePicker\n            disableToolbar\n            variant=\"inline\"\n            value={date}\n            format=\"dd/MM/yyyy\"\n            onChange={(date) => setDate(date as Date)}\n          />\n        </FormControl>\n      </MuiPickersUtilsProvider>\n\n      <FormControl className={classes.formControl}>\n        <FormLabel>Quantidade</FormLabel>\n        <Input\n          value={quantity}\n          type=\"number\"\n          onChange={(e) => setQuantity(parseInt(e.target.value))}\n        />\n      </FormControl>\n\n      <FormControl className={classes.formControl}>\n        <FormLabel>Valor total</FormLabel>\n        <Input\n          value={totalValue}\n          type=\"number\"\n          onChange={(e) => setTotalValue(parseInt(e.target.value))}\n          startAdornment={<InputAdornment position=\"start\">R$</InputAdornment>}\n        />\n      </FormControl>\n      <Button\n        size=\"medium\"\n        className={classes.buttonMargin}\n        variant=\"contained\"\n        onClick={save}\n      >\n        Salvar\n      </Button>\n    </Box>\n  );\n};\n\nexport default AddAsset;\n","import { request } from \"../utils/request\";\n\nexport type Asset = {\n  codigo: string;\n  cotacao: number;\n  id: number;\n  logo: string;\n  nome: string;\n};\n\nexport type AssetData = {\n  codigo: string;\n  logo: string;\n  nome: string;\n};\n\nexport const all = () => request.get(\"assets\").json<Asset[]>();\nexport const save = (asset: AssetData) =>\n  request.post(\"assets\", { json: asset });\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Modal,\n  Table,\n  Paper,\n  Avatar,\n  Button,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableCell,\n  makeStyles,\n  Typography,\n  TableContainer,\n} from \"@material-ui/core\";\n\nimport { Portfolio, all as apiAllPortfolio } from \"../../api/portfolio\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { OrderData, save as apiSaveOrder } from \"../../api/orders\";\nimport AddAsset from \"../AddAsset\";\n\ntype Row = {\n  logo: string;\n  codigo: string;\n  quantidade: number;\n  valor: number;\n};\n\nconst formatRow = ({\n  ativo: { codigo, logo },\n  quantidade,\n  valor,\n}: Portfolio): Row => ({\n  logo,\n  quantidade,\n  valor,\n  codigo,\n});\n\nconst useStyles = makeStyles(() => ({\n  margin: {\n    marginBottom: 24,\n  },\n  modalContainer: {\n    position: \"absolute\",\n    width: 800,\n    backgroundColor: \"white\",\n    border: \"2px solid #000\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst Wallet: React.FC = () => {\n  const [rows, setRows] = useState([] as Row[]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const classes = useStyles();\n\n  const fetchPortfolio = useCallback(async () => {\n    const portfolio = await apiAllPortfolio(1);\n    const formattedRows = portfolio.map((p) => formatRow(p));\n    setRows(formattedRows);\n  }, []);\n\n  const handleSave = (order: OrderData) => {\n    apiSaveOrder(order);\n    setIsOpen(false);\n    fetchPortfolio();\n  };\n\n  useEffect(() => {\n    fetchPortfolio();\n  }, [fetchPortfolio]);\n\n  return (\n    <Box m={5}>\n      <Typography className={classes.margin} variant=\"h5\">\n        Sua carteira\n      </Typography>\n      <TableContainer component={Paper} className={classes.margin}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">Ativo</TableCell>\n              <TableCell></TableCell>\n              <TableCell>Quantidade</TableCell>\n              <TableCell>Valor</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.codigo}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Avatar variant=\"square\" src={row.logo} alt={row.codigo} />\n                </TableCell>\n                <TableCell>{row.codigo}</TableCell>\n                <TableCell>{row.quantidade}</TableCell>\n                <TableCell>{formatCurrency(row.valor)}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Button\n        size=\"medium\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        Adicionar ativo\n      </Button>\n\n      <Modal\n        open={isOpen}\n        className={classes.modal}\n        onClose={() => setIsOpen(false)}\n      >\n        <body className={classes.modalContainer}>\n          <AddAsset onSave={handleSave} />\n        </body>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default Wallet;\n","import { request } from \"../utils/request\";\nimport { Asset } from \"./assets\";\n\nexport type Portfolio = {\n  ativo: Asset;\n  id_usuario: number;\n  quantidade: number;\n  valor: number;\n};\n\nexport const all = (userId: number) =>\n  request.get(`portfolio?usuario=${userId}`).json<Portfolio[]>();\n","export const formatCurrency = (value: number) =>\n  `R$ ${value.toString().replace(\".\", \",\")}`;\n","import { request } from \"../utils/request\";\n\nexport type Order = {\n  data: string;\n  id: number;\n  id_ativo: number;\n  id_usuario: number;\n  quantidade: number;\n  tipo: string;\n  valor: number;\n};\n\nexport type OrderData = {\n  data: string;\n  id_ativo: number;\n  id_usuario: number;\n  quantidade: number;\n  tipo: string;\n  valor: number;\n};\n\nexport const all = () => request.get(\"orders\").json<Order[]>();\nexport const save = (order: OrderData) =>\n  request.post(\"orders\", { json: order });\n","import React from \"react\";\nimport Wallet from \"./containers/Wallet\";\n\nfunction App() {\n  return <Wallet />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}