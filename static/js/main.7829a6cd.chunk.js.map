{"version":3,"sources":["utils/request.ts","api/holding.ts","components/MarginChart/index.tsx","components/DataChart/index.tsx","utils/formatPercentage.ts","containers/Holding/index.tsx","containers/Insights/index.tsx","api/insights.ts","api/orders.ts","containers/AddAsset/index.tsx","api/assets.ts","containers/Wallet/index.tsx","api/portfolio.ts","utils/formatCurrency.ts","components/Header/index.tsx","containers/Main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["request","ky","create","prefixUrl","headers","accept","holding","userId","expand","searchParams","URLSearchParams","append","get","json","MarginChart","data","chart","map","d","name","ano","margin","margem_liquida","toFixed","toPercent","decimal","ResponsiveContainer","width","height","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","YAxis","tickFormatter","Tooltip","formatter","Legend","Bar","fill","DataChart","div_ebitda","divida_liquida","ebitda","lucro_liquido","margem_ebitda","receita_liquida","LineChart","top","right","left","bottom","Line","type","stroke","formatPercentage","value","useStyles","makeStyles","marginBottom","modalContainer","position","backgroundColor","border","modal","display","alignItems","justifyContent","graphics","StyledTableCell","withStyles","head","body","borderBottom","fontSize","TableCell","Row","row","holdings","React","useState","open","setOpen","lala","filter","trimestre","Fragment","TableRow","IconButton","aria-label","size","onClick","KeyboardArrowUp","KeyboardArrowDown","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Table","TableHead","TableBody","codigo","Holding","rows","setRows","setHoldings","classes","fetchHoldings","useCallback","a","apiHolding","consolidated","useEffect","Box","m","Typography","className","variant","TableContainer","component","Paper","TabPanel","children","index","props","role","hidden","id","aria-labelledby","bold","fontWeight","cards","gridTemplateColumns","boxShadow","card","cardContent","flexDirection","Insights","setValue","insights","setInsights","fetchInsights","filteredInsights","insight","ativo_maior_divida","nome","ativo_maior_lucro","ativo_maior_receita","ativo_maior_ebitda","AppBar","color","Tabs","onChange","_","newValue","indicatorColor","textColor","scrollButtons","Tab","label","Card","CardContent","align","maxValue","divida_delta","text","lucro_maior_delta","ebitda_maior_delta","receita_maior_delta","save","order","post","formControl","minWidth","formLabelPadding","buttonMargin","marginTop","AddAsset","onSave","assets","setAssets","asset","setAsset","assetType","setAssetType","Date","date","setDate","quantity","setQuantity","totalValue","setTotalValue","fetchAssets","length","FormControl","FormLabel","RadioGroup","FormControlLabel","control","Radio","Select","e","target","MenuItem","utils","DateFnsUtils","DatePicker","disableToolbar","format","Input","parseInt","startAdornment","InputAdornment","Button","id_ativo","id_usuario","quantidade","tipo","valor","formatRow","ativo","logo","Wallet","isOpen","setIsOpen","fetchPortfolio","portfolio","formattedRows","p","handleSave","apiSaveOrder","padding","scope","Avatar","src","alt","toString","replace","Modal","onClose","header","paddingLeft","title","fontFamily","Header","Main","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7829a6cd.chunk.js","sourcesContent":["import ky from \"ky\";\n\nexport const request = ky.create({\n  prefixUrl: \"https://fundament-stock-api.herokuapp.com\",\n  headers: {\n    accept: \"application/json\",\n  },\n});\n","import { request } from \"../utils/request\";\n\ntype HoldingProps = {\n  userId: string;\n  expand?: boolean;\n};\n\ntype Asset = {\n  id: number;\n  codigo: string;\n  nome: string;\n};\n\ntype AssetData = {\n  ativo: Asset;\n  id_trimestre: number;\n  receita_liquida: number;\n  ebitda: number;\n  margem_ebitda: number;\n  lucro_liquido: number;\n  margem_liquida: number;\n  divida_liquida: number;\n  div_ebitda: number;\n};\n\nexport interface Holding {\n  trimestre: Quarter;\n  receita_liquida: number;\n  ebitda: number;\n  margem_ebitda: number;\n  lucro_liquido: number;\n  margem_liquida: number;\n  divida_liquida: number;\n  div_ebitda: number;\n  ativos: AssetData[];\n}\n\nexport interface Consolidated {\n  ano: number;\n  receita_liquida: number;\n  ebitda: number;\n  margem_ebitda: number;\n  lucro_liquido: number;\n  margem_liquida: number;\n  divida_liquida: number;\n  div_ebitda: number;\n}\n\nexport interface Holdings {\n  holdings: Holding[];\n  consolidated: Consolidated[];\n}\n\ntype Quarter = {\n  id: number;\n  ano: number;\n  trimestre: number;\n  codigo: string;\n};\n\nexport const holding = ({ userId, expand }: HoldingProps) => {\n  const searchParams = new URLSearchParams();\n  searchParams.append(\"usuario\", userId);\n  if (expand) {\n    searchParams.append(\"expandir\", `${expand}`);\n  }\n\n  return request.get(`holdings`, { searchParams }).json<Holdings>();\n};\n","import {\n  Bar,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  BarChart,\n  CartesianGrid,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Consolidated } from \"../../api/holding\";\n\nexport const MarginChart = ({ data }: { data: Consolidated[] }) => {\n  const chart = data?.map((d) => ({\n    name: d.ano,\n    margin: (d.margem_liquida * 100).toFixed(0),\n  }));\n\n  const toPercent = (decimal: string) => `${decimal}%`;\n\n  return (\n    <ResponsiveContainer width='50%' height={250}>\n      <BarChart data={chart}>\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='name' />\n        <YAxis tickFormatter={toPercent} />\n        <Tooltip formatter={toPercent} />\n        <Legend />\n        <Bar name='Margem' dataKey='margin' fill='#0E3A8A' />\n      </BarChart>\n    </ResponsiveContainer>\n  );\n};\n","import {\n  Line,\n  XAxis,\n  YAxis,\n  Legend,\n  Tooltip,\n  LineChart,\n  CartesianGrid,\n  ResponsiveContainer,\n} from \"recharts\";\nimport { Consolidated } from \"../../api/holding\";\n\nexport const DataChart = ({ data }: { data: Consolidated[] }) => {\n  const chart = data?.map((d) => ({\n    name: d.ano,\n    div_ebitda: d.div_ebitda,\n    divida_liquida: d.divida_liquida,\n    ebitda: d.ebitda,\n    lucro_liquido: d.lucro_liquido,\n    margem_ebitda: (d.margem_ebitda * 100).toFixed(0),\n    receita_liquida: d.receita_liquida,\n  }));\n\n  return (\n    <ResponsiveContainer width='50%' height={250}>\n      <LineChart\n        data={chart}\n        margin={{ top: 5, right: 30, left: 20, bottom: 5 }}\n      >\n        <CartesianGrid strokeDasharray='3 3' />\n        <XAxis dataKey='name' />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line\n          name='Dívida líquida/EBITDA'\n          type='monotone'\n          dataKey='div_ebitda'\n          stroke='#1B7473'\n        />\n        <Line\n          name='Dívida líquida'\n          type='monotone'\n          dataKey='divida_liquida'\n          stroke='#810E8A'\n        />\n        <Line\n          name='EBITDA'\n          type='monotone'\n          dataKey='ebitda'\n          stroke='#FFC300 '\n        />\n        <Line\n          name='Lucro líquido'\n          type='monotone'\n          dataKey='lucro_liquido'\n          stroke='#FF5733'\n        />\n        <Line\n          name='Margem líquida/EBITDA'\n          type='monotone'\n          dataKey='margem_ebitda'\n          stroke='#27741B'\n        />\n        <Line\n          name='Receita líquida'\n          type='monotone'\n          dataKey='receita_liquida'\n          stroke='#1B3674'\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n};\n","export const formatPercentage = (value: number) =>\n  `${(value * 100).toFixed(0)}%`;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Table,\n  Paper,\n  Collapse,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableCell,\n  withStyles,\n  makeStyles,\n  Typography,\n  IconButton,\n  TableContainer,\n} from \"@material-ui/core\";\nimport { KeyboardArrowUp, KeyboardArrowDown } from \"@material-ui/icons\";\n\nimport {\n  Consolidated,\n  holding as apiHolding,\n  Holding as HoldingProps,\n} from \"../../api/holding\";\nimport { MarginChart } from \"../../components/MarginChart\";\nimport { DataChart } from \"../../components/DataChart\";\nimport { formatPercentage } from \"../../utils/formatPercentage\";\n\nconst useStyles = makeStyles(() => ({\n  margin: {\n    marginBottom: 24,\n  },\n  modalContainer: {\n    position: \"absolute\",\n    width: 800,\n    backgroundColor: \"white\",\n    border: \"2px solid #000\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  graphics: {\n    display: \"flex\",\n  },\n}));\n\nconst StyledTableCell = withStyles(() => ({\n  head: {},\n  body: {\n    borderBottom: \"none\",\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst Row = ({ row, holdings }: { row: any; holdings: any }) => {\n  const [open, setOpen] = React.useState(false);\n\n  const lala = holdings.filter(\n    (holding: any) => holding.trimestre.ano === row.ano\n  );\n\n  return (\n    <React.Fragment>\n      <TableRow>\n        <TableCell>\n          <IconButton\n            aria-label='expand row'\n            size='small'\n            onClick={() => setOpen(!open)}\n          >\n            {open ? <KeyboardArrowUp /> : <KeyboardArrowDown />}\n          </IconButton>\n        </TableCell>\n        <TableCell>{row.ano}</TableCell>\n        <TableCell>{row.receita_liquida}</TableCell>\n        <TableCell>{row.ebitda}</TableCell>\n        <TableCell>{row.lucro_liquido}</TableCell>\n        <TableCell>{formatPercentage(row.margem_liquida)}</TableCell>\n        <TableCell>{row.divida_liquida}</TableCell>\n        <TableCell>{formatPercentage(row.margem_ebitda)}</TableCell>\n        <TableCell>{row.div_ebitda}</TableCell>\n      </TableRow>\n      <TableRow>\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={12}>\n          <Collapse in={open} timeout='auto' unmountOnExit>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Trimestre</TableCell>\n                  <TableCell>Receita líquida</TableCell>\n                  <TableCell>EBITDA</TableCell>\n                  <TableCell>Lucro líquido</TableCell>\n                  <TableCell>Margem líquida</TableCell>\n                  <TableCell>Dívida líquida</TableCell>\n                  <TableCell>Margem líquida/EBITDA</TableCell>\n                  <TableCell>Dívida líquida/EBITDA</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {lala.map((row: any) => (\n                  <TableRow key={row.trimestre.codigo}>\n                    <>\n                      <StyledTableCell>\n                        {row.trimestre.ano}/{row.trimestre.trimestre}\n                      </StyledTableCell>\n                      <StyledTableCell>{row.receita_liquida}</StyledTableCell>\n                      <StyledTableCell>{row.ebitda}</StyledTableCell>\n                      <StyledTableCell>{row.lucro_liquido}</StyledTableCell>\n                      <StyledTableCell>\n                        {formatPercentage(row.margem_liquida)}\n                      </StyledTableCell>\n                      <StyledTableCell>{row.divida_liquida}</StyledTableCell>\n                      <StyledTableCell>\n                        {formatPercentage(row.margem_ebitda)}\n                      </StyledTableCell>\n                      <StyledTableCell>{row.div_ebitda}</StyledTableCell>\n                    </>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </Collapse>\n        </TableCell>\n      </TableRow>\n    </React.Fragment>\n  );\n};\n\nconst Holding: React.FC = () => {\n  const [rows, setRows] = useState([] as Consolidated[]);\n  const [holdings, setHoldings] = useState([] as HoldingProps[]);\n\n  const classes = useStyles();\n\n  const fetchHoldings = useCallback(async () => {\n    const holding = await apiHolding({ userId: \"1\" });\n\n    setRows(holding.consolidated);\n    setHoldings(holding.holdings);\n  }, []);\n\n  useEffect(() => {\n    fetchHoldings();\n  }, [fetchHoldings]);\n\n  return (\n    <Box m={5}>\n      <Typography className={classes.margin} variant='h5'>\n        Resumo\n      </Typography>\n      <TableContainer component={Paper} className={classes.margin}>\n        <Table size='small'>\n          <TableHead>\n            <TableRow>\n              <TableCell></TableCell>\n              <TableCell>Ano</TableCell>\n              <TableCell>Receita líquida</TableCell>\n              <TableCell>EBITDA</TableCell>\n              <TableCell>Lucro líquido</TableCell>\n              <TableCell>Margem líquida</TableCell>\n              <TableCell>Dívida líquida</TableCell>\n              <TableCell>Margem líquida/EBITDA</TableCell>\n              <TableCell>Dívida líquida/EBITDA</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows?.map((row) => (\n              <Row row={row} holdings={holdings} />\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <div className={classes.graphics}>\n        <MarginChart data={rows} />\n        <DataChart data={rows} />\n      </div>\n    </Box>\n  );\n};\n\nexport default Holding;\n","import React, { ReactNode, useCallback, useEffect, useState } from \"react\";\n\nimport Tab from \"@material-ui/core/Tab\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { Box, Card, CardContent } from \"@material-ui/core\";\nimport { CircularProgressbar } from \"react-circular-progressbar\";\nimport \"react-circular-progressbar/dist/styles.css\";\n\nimport { Insight, summary as apiInsightsSummary } from \"../../api/insights\";\nimport { formatPercentage } from \"../../utils/formatPercentage\";\n\ntype TabPanelProps = {\n  children: ReactNode;\n  value: number;\n  index: number;\n};\n\nconst TabPanel = ({ children, value, index, ...props }: TabPanelProps) => {\n  return (\n    <div\n      role='tabpanel'\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...props}\n    >\n      {value === index && <Typography>{children}</Typography>}\n    </div>\n  );\n};\n\nconst useStyles = makeStyles(() => ({\n  bold: {\n    fontWeight: 700,\n  },\n  cards: {\n    display: \"grid\",\n    gridTemplateColumns: \"1fr 1fr 1fr 1fr\",\n    boxShadow:\n      \"0px 2px 4px -1px rgb(0 0 0 / 20%), 0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%)\",\n  },\n  card: {\n    margin: \"10px 5px\",\n  },\n  cardContent: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  margin: {\n    marginBottom: 24,\n  },\n}));\n\nconst Insights = () => {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n  const [insights, setInsights] = useState<Insight[]>([]);\n\n  const handleChange = (_: any, newValue: number) => {\n    setValue(newValue);\n  };\n\n  const fetchInsights = useCallback(async () => {\n    const { insights } = await apiInsightsSummary(1);\n    const filteredInsights = insights.filter(\n      (insight) =>\n        !!insight.ativo_maior_divida.nome ||\n        !!insight.ativo_maior_lucro.nome ||\n        !!insight.ativo_maior_receita.nome ||\n        !!insight.ativo_maior_ebitda.nome\n    );\n    setInsights(filteredInsights);\n  }, []);\n\n  useEffect(() => {\n    fetchInsights();\n  }, [fetchInsights]);\n\n  return (\n    <Box m={5}>\n      <Typography className={classes.margin} variant='h5'>\n        Insights\n      </Typography>\n      <AppBar position='static' color='default'>\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor='primary'\n          textColor='primary'\n          variant='scrollable'\n          scrollButtons='auto'\n          aria-label='scrollable auto tabs example'\n        >\n          {insights.map((insight, index) => (\n            <Tab\n              label={`${insight.trimestre.ano}/${insight.trimestre.trimestre}`}\n            />\n          ))}\n        </Tabs>\n      </AppBar>\n\n      {insights.map((insight, index) => (\n        <TabPanel value={value} index={index}>\n          <div className={classes.cards}>\n            {!!insight.ativo_maior_divida.nome && (\n              <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                  <Typography\n                    variant='subtitle1'\n                    align='center'\n                    className={classes.bold}\n                  >\n                    {\" \"}\n                    Ativo com maior aumento de dívida{\" \"}\n                  </Typography>\n                  {insight.ativo_maior_divida.nome}{\" \"}\n                  <div style={{ width: 100, height: 100 }}>\n                    <CircularProgressbar\n                      maxValue={1}\n                      value={insight.divida_delta}\n                      text={formatPercentage(insight.divida_delta)}\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {!!insight.ativo_maior_lucro.nome && (\n              <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                  <Typography\n                    variant='subtitle1'\n                    align='center'\n                    className={classes.bold}\n                  >\n                    {\" \"}\n                    Ativo com maior aumento de lucro{\" \"}\n                  </Typography>\n                  {insight.ativo_maior_lucro.nome}{\" \"}\n                  <div style={{ width: 100, height: 100 }}>\n                    <CircularProgressbar\n                      maxValue={1}\n                      value={insight.lucro_maior_delta}\n                      text={formatPercentage(insight.lucro_maior_delta)}\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {!!insight.ativo_maior_ebitda.nome && (\n              <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                  <Typography\n                    variant='subtitle1'\n                    align='center'\n                    className={classes.bold}\n                  >\n                    {\" \"}\n                    Ativo com maior aumento de EBITDA{\" \"}\n                  </Typography>\n                  {insight.ativo_maior_ebitda.nome}{\" \"}\n                  <div style={{ width: 100, height: 100 }}>\n                    <CircularProgressbar\n                      maxValue={1}\n                      value={insight.ebitda_maior_delta}\n                      text={formatPercentage(insight.ebitda_maior_delta)}\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n\n            {!!insight.ativo_maior_receita.nome && (\n              <Card className={classes.card}>\n                <CardContent className={classes.cardContent}>\n                  <Typography\n                    variant='subtitle1'\n                    align='center'\n                    className={classes.bold}\n                  >\n                    {\" \"}\n                    Ativo com maior aumento de receita{\" \"}\n                  </Typography>\n                  {insight.ativo_maior_receita.nome}{\" \"}\n                  <div style={{ width: 100, height: 100 }}>\n                    <CircularProgressbar\n                      value={insight.receita_maior_delta * 100}\n                      text={formatPercentage(insight.receita_maior_delta)}\n                    />\n                  </div>\n                </CardContent>\n              </Card>\n            )}\n          </div>\n        </TabPanel>\n      ))}\n    </Box>\n  );\n};\n\nexport default Insights;\n","import { request } from \"../utils/request\";\n\ntype Quarter = {\n  id: number;\n  ano: number;\n  trimestre: number;\n  codigo: string;\n};\n\ntype Asset = {\n  id: number;\n  codigo: string;\n  nome: string;\n};\n\nexport type Insight = {\n  trimestre: Quarter;\n  ativo_maior_receita: Asset;\n  receita_maior_delta: number;\n  ativo_maior_ebitda: Asset;\n  ebitda_maior_delta: number;\n  ativo_maior_lucro: Asset;\n  lucro_maior_delta: number;\n  ativo_maior_divida: Asset;\n  divida_delta: number;\n};\n\nexport type Insights = {\n  insights: Insight[];\n};\n\nexport const summary = (userId: number) =>\n  request.get(`insights-summary?usuario=${userId}`).json<Insights>();\n","import { request } from \"../utils/request\";\n\nexport type Order = {\n  data: string;\n  id: number;\n  id_ativo: number;\n  id_usuario: number;\n  quantidade: number;\n  tipo: string;\n  valor: number;\n};\n\nexport type OrderData = {\n  data: string;\n  id_ativo: number;\n  id_usuario: number;\n  quantidade: number;\n  tipo: string;\n  valor: number;\n};\n\nexport const all = () => request.get(\"orders\").json<Order[]>();\nexport const save = (order: OrderData) =>\n  request.post(\"orders\", { json: order });\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Radio,\n  Input,\n  Select,\n  Button,\n  MenuItem,\n  FormLabel,\n  Typography,\n  RadioGroup,\n  FormControl,\n  InputAdornment,\n  FormControlLabel,\n} from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { DatePicker, MuiPickersUtilsProvider } from \"@material-ui/pickers\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport { format } from \"date-fns\";\n\nimport { Asset, all as apiAllAssets } from \"../../api/assets\";\nimport { OrderData } from \"../../api/orders\";\n\ntype AssetType = \"C\" | \"V\";\n\ntype Props = {\n  onSave: (order: OrderData) => void;\n};\n\nconst useStyles = makeStyles(() => ({\n  formControl: {\n    minWidth: 120,\n    paddingTop: 24,\n  },\n  formLabelPadding: {\n    paddingBottom: 16,\n  },\n  buttonMargin: {\n    marginTop: 24,\n  },\n}));\n\nconst AddAsset: React.FC<Props> = ({ onSave }) => {\n  const [assets, setAssets] = useState<Asset[]>();\n  const [asset, setAsset] = useState(0);\n  const [assetType, setAssetType] = useState<AssetType>(\"C\");\n  const [date, setDate] = useState(new Date());\n  const [quantity, setQuantity] = useState(0);\n  const [totalValue, setTotalValue] = useState(0);\n\n  const classes = useStyles();\n\n  const fetchAssets = useCallback(async () => {\n    const assets = await apiAllAssets();\n    setAssets(assets);\n    if (assets.length > 0) {\n      setAsset(assets[0].id);\n    }\n  }, []);\n\n  const save = () => {\n    onSave({\n      data: `${format(date, \"yyyy-MM-dd\")}T00:00:00Z`,\n      id_ativo: asset,\n      id_usuario: 1,\n      quantidade: quantity,\n      tipo: assetType,\n      valor: totalValue,\n    });\n  };\n\n  const toggleAssetType = () => {\n    setAssetType(assetType === \"C\" ? \"V\" : \"C\");\n  };\n\n  useEffect(() => {\n    fetchAssets();\n  }, [fetchAssets]);\n\n  return (\n    <Box m={4} display=\"flex\" flexDirection=\"column\">\n      <Typography variant=\"h6\"> Adicione ativo</Typography>\n      <FormControl className={classes.formControl}>\n        <FormLabel>Tipo de ativo</FormLabel>\n        <RadioGroup\n          row\n          aria-label=\"tipo de ativo\"\n          name=\"assetType\"\n          value={assetType}\n          onChange={toggleAssetType}\n        >\n          <FormControlLabel\n            value=\"C\"\n            control={<Radio color=\"primary\" />}\n            label=\"Compra\"\n          />\n          <FormControlLabel\n            value=\"V\"\n            control={<Radio color=\"primary\" />}\n            label=\"Venda\"\n          />\n        </RadioGroup>\n      </FormControl>\n\n      <FormControl className={classes.formControl}>\n        <FormLabel>Ativo</FormLabel>\n        <Select\n          value={asset}\n          onChange={(e) => setAsset(e.target.value as number)}\n        >\n          {assets?.map((asset) => (\n            <MenuItem value={asset.id}>{asset.nome}</MenuItem>\n          ))}\n        </Select>\n      </FormControl>\n\n      <MuiPickersUtilsProvider utils={DateFnsUtils}>\n        <FormControl className={classes.formControl}>\n          <FormLabel className={classes.formLabelPadding}>Data</FormLabel>\n          <DatePicker\n            disableToolbar\n            variant=\"inline\"\n            value={date}\n            format=\"dd/MM/yyyy\"\n            onChange={(date) => setDate(date as Date)}\n          />\n        </FormControl>\n      </MuiPickersUtilsProvider>\n\n      <FormControl className={classes.formControl}>\n        <FormLabel>Quantidade</FormLabel>\n        <Input\n          value={quantity}\n          type=\"number\"\n          onChange={(e) => setQuantity(parseInt(e.target.value))}\n        />\n      </FormControl>\n\n      <FormControl className={classes.formControl}>\n        <FormLabel>Valor total</FormLabel>\n        <Input\n          value={totalValue}\n          type=\"number\"\n          onChange={(e) => setTotalValue(parseInt(e.target.value))}\n          startAdornment={<InputAdornment position=\"start\">R$</InputAdornment>}\n        />\n      </FormControl>\n      <Button\n        size=\"medium\"\n        className={classes.buttonMargin}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={save}\n      >\n        Salvar\n      </Button>\n    </Box>\n  );\n};\n\nexport default AddAsset;\n","import { request } from \"../utils/request\";\n\nexport type Asset = {\n  codigo: string;\n  cotacao: number;\n  id: number;\n  logo: string;\n  nome: string;\n};\n\nexport type AssetData = {\n  codigo: string;\n  logo: string;\n  nome: string;\n};\n\nexport const all = () => request.get(\"assets\").json<Asset[]>();\nexport const save = (asset: AssetData) =>\n  request.post(\"assets\", { json: asset });\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport {\n  Box,\n  Modal,\n  Table,\n  Paper,\n  Avatar,\n  Button,\n  TableRow,\n  TableBody,\n  TableHead,\n  TableCell,\n  makeStyles,\n  Typography,\n  TableContainer,\n} from \"@material-ui/core\";\n\nimport { Portfolio, all as apiAllPortfolio } from \"../../api/portfolio\";\nimport { formatCurrency } from \"../../utils/formatCurrency\";\nimport { OrderData, save as apiSaveOrder } from \"../../api/orders\";\nimport AddAsset from \"../AddAsset\";\n\ntype Row = {\n  logo: string;\n  codigo: string;\n  quantidade: number;\n  valor: number;\n};\n\nconst formatRow = ({\n  ativo: { codigo, logo },\n  quantidade,\n  valor,\n}: Portfolio): Row => ({\n  logo,\n  quantidade,\n  valor,\n  codigo,\n});\n\nconst useStyles = makeStyles(() => ({\n  margin: {\n    marginBottom: 24,\n  },\n  modalContainer: {\n    position: \"absolute\",\n    width: 800,\n    backgroundColor: \"white\",\n    border: \"2px solid #000\",\n  },\n  modal: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n}));\n\nconst Wallet: React.FC = () => {\n  const [rows, setRows] = useState([] as Row[]);\n  const [isOpen, setIsOpen] = useState(false);\n\n  const classes = useStyles();\n\n  const fetchPortfolio = useCallback(async () => {\n    const portfolio = await apiAllPortfolio(1);\n    const formattedRows = portfolio.map((p) => formatRow(p));\n    setRows(formattedRows);\n  }, []);\n\n  const handleSave = async (order: OrderData) => {\n    await apiSaveOrder(order);\n    setIsOpen(false);\n    fetchPortfolio();\n  };\n\n  useEffect(() => {\n    fetchPortfolio();\n  }, [fetchPortfolio]);\n\n  return (\n    <Box m={5}>\n      <Typography className={classes.margin} variant=\"h5\">\n        Sua carteira\n      </Typography>\n      <TableContainer component={Paper} className={classes.margin}>\n        <Table size=\"small\">\n          <TableHead>\n            <TableRow>\n              <TableCell padding=\"checkbox\">Ativo</TableCell>\n              <TableCell></TableCell>\n              <TableCell>Quantidade</TableCell>\n              <TableCell>Valor</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows.map((row) => (\n              <TableRow key={row.codigo}>\n                <TableCell component=\"th\" scope=\"row\">\n                  <Avatar variant=\"square\" src={row.logo} alt={row.codigo} />\n                </TableCell>\n                <TableCell>{row.codigo}</TableCell>\n                <TableCell>{row.quantidade}</TableCell>\n                <TableCell>{formatCurrency(row.valor)}</TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <Button\n        size=\"medium\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        Adicionar ativo\n      </Button>\n\n      <Modal\n        open={isOpen}\n        className={classes.modal}\n        onClose={() => setIsOpen(false)}\n      >\n        <body className={classes.modalContainer}>\n          <AddAsset onSave={handleSave} />\n        </body>\n      </Modal>\n    </Box>\n  );\n};\n\nexport default Wallet;\n","import { request } from \"../utils/request\";\nimport { Asset } from \"./assets\";\n\nexport type Portfolio = {\n  ativo: Asset;\n  id_usuario: number;\n  quantidade: number;\n  valor: number;\n};\n\nexport const all = (userId: number) =>\n  request.get(`portfolio?usuario=${userId}`).json<Portfolio[]>();\n","export const formatCurrency = (value: number) =>\n  `R$ ${value.toString().replace(\".\", \",\")}`;\n","import { makeStyles, Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n  header: {\n    height: \"100px\",\n    width: \"100vw\",\n    display: \"flex\",\n    alignItems: \"center\",\n    paddingLeft: \"30px\",\n    backgroundColor: \"#015da4\",\n  },\n  title: {\n    fontFamily: \"Exo\",\n    color: \"#1C1D1E\",\n    // textTransform: \"uppercase\",\n  },\n}));\n\nconst Header = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.header}>\n      <Typography className={classes.title} variant='h3'>\n        You As Holding\n      </Typography>\n    </div>\n  );\n};\n\nexport default Header;\n","import Holding from \"../Holding\";\nimport Insights from \"../Insights\";\nimport Wallet from \"../Wallet\";\nimport Header from \"../../components/Header\";\n\nexport const Main = () => {\n  return (\n    <>\n      <Header />\n      <Wallet />\n      <Holding />\n      <Insights />\n    </>\n  );\n};\n","import React from \"react\";\n\nimport { Main } from \"./containers/Main\";\n\nfunction App() {\n  return <Main />;\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}